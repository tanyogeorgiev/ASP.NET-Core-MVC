@model UserScheduleViewModel
@inject UserManager<User> UserManager
@{
    ViewBag.Title = "Index";
    var currentDateTime = Model.Week.FirstDayOfWeek;
    var zeroTimeDate = new DateTime(currentDateTime.Year, currentDateTime.Month, currentDateTime.Day, 0, 0, 0);
    var firstWeekDate = zeroTimeDate;
    var lastWeekDate = firstWeekDate.AddDays(5);
    var tmpAppId = 0;
    if (TempData.ContainsKey("appointmentId"))
    {
        tmpAppId = (int)TempData["appointmentId"];

    }



}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<div id="notificationBox">

</div>

<h2 class="text-center"> SCHEDULE</h2>
<h2 class="text-center"> @firstWeekDate.ToShortDateString() - @lastWeekDate.ToShortDateString()</h2>

<div class="container-fluid">
    <hr />
    <div class="row justify-content-around">
        <div class="col-md-3">
            <form class="form-inline" method="get" asp-controller="schedule" asp-action="ByWeek">

                <div class="form-group">

                    <input type="hidden" placeholder="Enter week..." asp-for="Week.WeekNumber" value="@(Model.Week.WeekNumber - 1)" class="form-control" />

                </div>

                <input type="submit" value="Previous Week" class="btn btn-primary btn-sm btn-block" />


            </form>



        </div>
        <div class="col-md-6 text-center">

            <form class="form-inline" method="get" asp-controller="schedule" asp-action="ByWeek">



                <div class="form-group">
                    <label asp-for="Week.WeekNumber"></label>
                    <input placeholder="Enter week..." asp-for="Week.WeekNumber" id="toClear" class="form-control" />

                </div>

                <input type="submit" value="View" class="btn btn-primary  " />
            </form>


        </div>
        <div class="col-md-3">
            <form class="form-inline" method="get" asp-controller="schedule" asp-action="ByWeek">

                <div class="form-group">
                    <label hidden asp-for="Week.WeekNumber"></label>
                    <input type="hidden" asp-for="Week.WeekNumber" value="@(Model.Week.WeekNumber + 1)" class="form-control" />

                </div>

                <input type="submit" value="Next Week" class="btn btn-primary btn-sm btn-block" />


            </form>

        </div>
    </div>

    <table class="table table-hover table-bordered schedule table-condensed ">
        <thead>
            <tr>
                <th class="text-center">Hours</th>
                <th class="text-center"><p>@firstWeekDate.DayOfWeek</p>@firstWeekDate.ToShortDateString()</th>
                @{
                    for (int i = 1; i <= 6; i++)
                    {
                        if (firstWeekDate.AddDays(i).Date == DateTime.Now.Date)
                        {
                            <th class="text-center" style="background-color:#ff6262"><p>@firstWeekDate.AddDays(i).DayOfWeek </p>@firstWeekDate.AddDays(i).ToShortDateString()</th>
                        }
                        else
                        {
                            <th class="text-center"><p>@firstWeekDate.AddDays(i).DayOfWeek </p>@firstWeekDate.AddDays(i).ToShortDateString()</th>
                        }
                    }
                }

            </tr>
        </thead>
        <tbody class="text-center schedule">
            @{
                var currentUserId = UserManager.GetUserId(User);

                for (int i = 8; i < 17; i++)
                {

                    for (int k = 0; k < 60; k += 15)
                    {
                        <tr>


                            @for (int j = 0; j < 7; j++)
                            {
                                var currentDateAndTime = firstWeekDate.AddDays(j).AddHours(i).AddMinutes(k);

                                if (j == 0)
                                {
                                    <td>@currentDateAndTime.ToShortTimeString()</td>

                                }

                                var appointment = Model.Appointments.Where(a => Convert.ToDateTime(a.StartTime) == currentDateAndTime).FirstOrDefault();

                                if (appointment != null)
                                {
                                    <td class="success"
                                        data-editorsave="edit"
                                        data-toggle="modal"
                                        data-target="#modal"
                                        data-time="@Convert.ToDateTime(currentDateAndTime).TimeOfDay"
                                        data-day="@currentDateAndTime.Year-@currentDateAndTime.Month.ToString("D2")-@currentDateAndTime.Day.ToString("D2")"
                                        data-id="@appointment.Id"
                                        data-title="@appointment.Title"
                                        data-description="@appointment.Description"
                                        data-date="@currentDateAndTime"
                                        data-appointmentid=""
                                        data-patientId="@appointment.PatientId"
                                        data-patientName="@appointment.PatientName"
                                        data-owner="@(appointment.CreatorId==currentUserId ? "true" : "false")">
                                        <span class="glyphicon glyphicon-bookmark" style="color:#ff6262;top:0;float:left"></span> <span>@appointment.Title </span>

                                    </td>
                                }

                                else
                                {
                                    @:
                                    <td data-toggle="modal" data-editorsave="save" data-target="#modal" data-title="" data-description="" data-date="@currentDateAndTime" data-owner="true" data-appointmentid=""></td>

                                }


                            }

                        </tr>
                    }

                }
            }

        </tbody>
    </table>
</div>


<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="ModalLabel">Add new appointment</h4>
            </div>
            <div class="modal-body">
                <form method="post" asp-controller="schedule" asp-action="NewAppointment">

                    <div class="form-group">
                        <label hidden asp-for="EditAppointment.Id"></label>
                        <input type="hidden" asp-for="EditAppointment.Id" />

                    </div>


                    <div class="form-group">

                        <label asp-for="EditAppointment.Title"></label>
                        <input required asp-for="EditAppointment.Title" placeholder="Enter title..." class="form-control" />
                        <span asp-validation-for="EditAppointment.Title" class="form-text text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="EditAppointment.Description"></label>
                        <input required rows="3" asp-for="EditAppointment.Description" placeholder="Enter description..." class="form-control" />
                        <span asp-validation-for="EditAppointment.Description" class="form-text text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label asp-for="EditAppointment.StartTime"></label>
                        <input readonly asp-for="EditAppointment.StartTime" placeholder="Enter description..." class="form-control" />
                        <span asp-validation-for="EditAppointment.StartTime" class="form-text text-danger"></span>
                    </div>
                    @if (User.IsInRole(WebConstants.DoctorRole))
                    {
                        <div class="form-group">
                            <label for="Name">Patient name:</label>
                            <input class="form-control" type="text" id="txtCustomer" asp-for="EditAppointment.PatientName" />
                            <input hidden type="text" id="hfCustomer" asp-for="EditAppointment.PatientId" />
                        </div>
                    }
                    <div class="form-group toEdit buttonsForOwners" hidden>
                        <label asp-for="EditAppointment.NewStartDay"></label>
                        <input asp-for="EditAppointment.NewStartDay" class="form-control" />
                        <span asp-validation-for="EditAppointment.NewStartDay" class="form-text text-danger"></span>
                    </div>

                    <div class="form-group toEdit buttonsForOwners" hidden>
                        <label asp-for="EditAppointment.NewStartTime"></label>
                        <input class="form-control" type="time" name="EditAppointment.NewStartTime" step="900"
                               min="08:00" max="16:45">

                        <span asp-validation-for="EditAppointment.NewStartTime" class="form-text text-danger"></span>
                    </div>

                   
                    <div class="row justify-content-around">
                        <div class="col-md-5 buttonsForOwners">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                        <div class="col-md-3 toEdit">
                            <a id="deleteme" asp-controller="schedule" asp-action="DeleteAppointment" class=" btn btn-danger ">Delete</a>
                        </div>
                        <div id="medicalsheetbutton" class="col-md-4 buttonsForOwners">
                            <a   class="btn btn-primary" >Create Medical Sheet</a>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>



@section Scripts {

    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
        $(function () {
            $("#txtCustomer").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Doctor/Patients/AutoCompletePatients/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {

                            response($.map(data, function (item) {
                                return item;

                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    console.log(i)
                    $("#hfCustomer").val(i.item.id);

                },
                minLength: 1
            })

        });
        var results = $("#Results");
        var onBegin = function () {

        };

        var onComplete = function () {
            results.html("");
        };

        var onSuccess = function (context) {
        //    $('#message1').toggleClass('in');
            $('#modal').modal('hide');
            // $('#notificationBox').html('<div class="alert alert-success fade in"><strong>Success!</strong> Appointment was already added to the schedule! </div>').fadeIn(800).delay(1200).slideUp(800);
        //    location.reload();

        };

        var onFailed = function (context) {
           $('#modal').modal('hide');

          //  $('#notificationBox').html('<div class="alert alert-danger fade in"><strong>Faild!</strong> Appointment wa not added to the schedule! </div>').fadeIn(800).delay(2000).slideUp(800);
        };



        $(document).ready(function () {

            if (@tmpAppId != 0) {
                $('td[data-id="' + @tmpAppId+'"]').click()

            }
        })

        $('input[id="toClear"]').val('')
        $('#modal').on('show.bs.modal', function (event) {
            $("#medicalsheetbutton").toggleClass('hiddenDiv', true)

            var cell = $(event.relatedTarget) // Button that triggered the modal
            // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.


            var appointmentId = cell.data('id')
            var currentDateTime = cell.data('date')
            var title = cell.data('title')
            var description = cell.data('description')
            var editOrSave = cell.data('editorsave')
            var currentDate = cell.data('day')
            var currentTime = cell.data('time')
            var patientId = cell.data('patientid')
            var patientName = cell.data('patientname')
            var owner = cell.data('owner')



            //  var fulldate = new Date(year,month,day,hour, minutes, 0)
            var modal = $(this)
            var $form = modal.find("form")
            $("#buttonsForOwners").toggleClass('hiddenDiv', false)
            if (patientId) {
                var button = $("#medicalsheetbutton")
                button.toggleClass('hiddenDiv', false)
                var formAction = "/Doctor/MedicalSheet/New?patientid=" + patientId 
                console.log(formAction)
            
                button.find('a').attr('href', formAction)
            }
            modal.find("input").attr("readonly", false)

           
                if (editOrSave == 'edit') {

                    modal.find("#ModalLabel").html('Edit or Delete Appointment!')
                    modal.find("form").find('input[type="submit"]').val('Change appointment')
                    modal.find("form").find('.toEdit').attr('hidden', false)

                    $form.attr("action", "/schedule/EditAppointment")
                    var href = modal.find("#deleteme").attr("href")
                    console.log(appointmentId)
                    var appendToHref = '?id=' + appointmentId + '&week=' +@Model.Week.WeekNumber+''
                    href = href + appendToHref
                    modal.find("#deleteme").attr("href", href)
                    modal.find("input[name='EditAppointment.StartTime']").attr('readonly',true)

                }

                else if (editOrSave == 'save') {
                    modal.find("#deleteme").attr("href", 'schedule/DeleteAppointment')
                    modal.find("form").find('input[type="submit"]').val('Save')
                    modal.find("form").find('.toEdit').attr('hidden', true)
                    $form.attr("action", "/schedule/NewAppointment")

                }
            
            
                if (!owner) {
                    $(".buttonsForOwners").toggleClass('hiddenDiv', true)
                    modal.find("input").attr("readonly", true)
                }


            modal.find('.modal-body input[name="EditAppointment.Id"]').val(appointmentId)


            modal.find('.modal-body input[name="EditAppointment.Title"]').val(title)
            modal.find('.modal-body input[name="EditAppointment.Description"]').val(description)
            modal.find('.modal-body input[name="EditAppointment.StartTime"]').val(currentDateTime)
            modal.find('.modal-body input[name="EditAppointment.NewStartTime"]').attr('value', currentTime)
            modal.find('.modal-body input[name="EditAppointment.NewStartDay"]').attr('value', currentDate)
            modal.find('.modal-body input[name="EditAppointment.PatientName"]').val(patientName)
            modal.find('.modal-body input[name="EditAppointment.PatientId"]').val(patientId)




            var $inputs = $form.find(".field-validation-error");




            $inputs.each(function () {
                $(this).empty()
            });


        })
    </script>

}